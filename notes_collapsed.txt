
read_file(filename=None, kind=None, units=None, intvl=None, loc=None):
		all_lines=getValidLines(filename):   
		kind,units,intvl,loc=getMetaData(all_lines):
		detectFormat(filename,data_lines,intvl):
		parse(filename,all_lines,intvl,format)



xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
changes:
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

i)  things are much more compact

ii) deal with trailing comma which caused a 13 item line to be counted as 14
solution: added ``if s'' to item=[s.strip for s in line if s]

iii) more detailed exceptions (include both filename and line number in file)

v) search for ',' in line to determine monthly cglrrm vs monthly table

vi) got rid of proc_data (seems like a wrapper fxn for parse data)

vii) based on pep8, fxns always return (if errror then returns None, etc.) instead of raising exception

viii)  based on pep8 switchd fxn names from camelCase to snake_case

=====================================================
still to figure out/fix/etc.
=====================================================
1. parse 
    a. regex subs
    b. splitstr=','/'-' or None


2. why does parse call getMetaData after metaData is already "got" by parent functions
	this ends up returning file meta data as ds object (instead of possible metadata args in call)


3. detectFormat()
	a. for (2) above, do error checking with break in the actual cases; raise exceptions at end

	b	if a file for some reason is formatted for two different formats, the last format will be assumed. I can fix this pretty easily, but is it really neccessary? I'm not sure this would actually happen.
  
	e.g.  
		 line1 CGLRR format
		 line2 CGLRR format
		 line3 CGLRR format
		 line5 table format
		 line5 table format
			
		will return table format

4. increase pyLint score

5. CGLRRM files without spaces?!? (dly_cglrrm2.txt)  with blanks where data should be? (mille.prn)

6 handling of missing data (-999.99)  Does databank handle this?

7. reading in -999.9 as -99e+29?!?! scratch that it's the missing_Value

8. qtr monthly can't handle a partial year (i.e. it must start in January and End in december)







